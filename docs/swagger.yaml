definitions:
  controller.ErrBadRequest:
    properties:
      error:
        example: Неверный запрос
        type: string
    type: object
  controller.ErrInternal:
    properties:
      error:
        example: Внутренняя ошибка сервера, повторите попытку позже или обратитесь
          к системному администратору
        type: string
    type: object
  controller.ErrNotFound:
    properties:
      error:
        example: Запись не найдена
        type: string
    type: object
  controller.GetTodoListResponse:
    properties:
      result:
        items:
          $ref: '#/definitions/model.TodoTask'
        type: array
    type: object
  controller.GetTodoTaskResponse:
    properties:
      result:
        $ref: '#/definitions/model.TodoTask'
        type: object
    type: object
  controller.HealthCheck:
    properties:
      result:
        properties:
          DB:
            example: ok
            type: string
        type: object
    type: object
  controller.OKResponse:
    properties:
      result:
        example: ok
        type: string
    type: object
  controller.TaskDTO:
    properties:
      task:
        example: Do my homework
        type: string
    required:
    - task
    type: object
  model.TodoTask:
    properties:
      id:
        example: 1
        type: integer
      task:
        example: Do my homework
        type: string
      todoListID:
        example: 1
        type: integer
    type: object
info:
  contact: {}
  description: Документация для http сервера приложения
  license: {}
  title: CYBERZILLA API task
paths:
  /healthcheck:
    get:
      consumes:
      - application/json
      description: Запускает процесс проверки всех зависимостей, необходимых для корректной
        работы сервера
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.HealthCheck'
      summary: Проверка сервера
      tags:
      - Служебные
  /todos:
    get:
      consumes:
      - application/json
      description: Возвращает список заданий
      parameters:
      - default: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        description: Токен списка задач
        in: query
        name: token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.GetTodoListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrBadRequest'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.ErrNotFound'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.ErrInternal'
      summary: Список заданий
      tags:
      - Основные
    post:
      consumes:
      - application/json
      description: Создает новую задачу
      parameters:
      - default: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        description: Токен списка задач
        in: query
        name: token
        type: string
      - description: Тело запроса
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/controller.TaskDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.OKResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrBadRequest'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.ErrInternal'
      summary: Создать задачу
      tags:
      - Основные
  /todos/{id}:
    get:
      consumes:
      - application/json
      description: Возвращает задачу по id
      parameters:
      - default: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        description: Токен списка задач
        in: query
        name: token
        type: string
      - default: 1
        description: Идентиикатор задачи
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.GetTodoTaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrBadRequest'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.ErrNotFound'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.ErrInternal'
      summary: Задача
      tags:
      - Основные
    put:
      consumes:
      - application/json
      description: Обновляет данные задачи по id
      parameters:
      - default: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        description: Токен списка задач
        in: query
        name: token
        type: string
      - default: 1
        description: Идентиикатор задачи
        in: path
        name: id
        required: true
        type: integer
      - description: Тело запроса
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/controller.TaskDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.GetTodoTaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrBadRequest'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.ErrNotFound'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.ErrInternal'
      summary: Обновить задачу
      tags:
      - Основные
swagger: "2.0"
